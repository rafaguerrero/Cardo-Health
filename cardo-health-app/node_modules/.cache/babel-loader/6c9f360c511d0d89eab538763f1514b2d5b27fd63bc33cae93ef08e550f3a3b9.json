{"ast":null,"code":"import _regeneratorRuntime from\"/Users/rafaelguerreroclemente/Documents/interviews/Cardo-Health/cardo-health-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/rafaelguerreroclemente/Documents/interviews/Cardo-Health/cardo-health-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{getToken,setToken}from'../token';export var authAPI=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(path){var data,authToken,options,_args=arguments;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:data=_args.length>1&&_args[1]!==undefined?_args[1]:{};authToken=getToken();options={method:'POST',mode:'cors',cache:'no-cache',credentials:'same-origin',headers:{'Content-Type':'application/json'},referrerPolicy:'no-referrer',body:JSON.stringify(data)};if(authToken)options.headers['Authorization']=authToken;return _context.abrupt(\"return\",fetch('http://localhost:3001/'+path,options).then(function(res){if(res.ok)return res.json();throw new Error('There was an error');}).catch(function(e){console.log('3');setToken(null);window.alert(e.message);window.location.href='/login';}));case 5:case\"end\":return _context.stop();}},_callee);}));return function authAPI(_x){return _ref.apply(this,arguments);};}();","map":{"version":3,"names":["getToken","setToken","authAPI","path","data","authToken","options","method","mode","cache","credentials","headers","referrerPolicy","body","JSON","stringify","fetch","then","res","ok","json","Error","catch","e","console","log","window","alert","message","location","href"],"sources":["/Users/rafaelguerreroclemente/Documents/interviews/Cardo-Health/cardo-health-app/src/utils/api/index.js"],"sourcesContent":["import { getToken, setToken } from '../token';\n\nexport const authAPI = async (path, data = {}) => {\n    const authToken = getToken();\n\n    const options = {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: { 'Content-Type': 'application/json' },\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify(data)\n    };\n\n    if (authToken) options.headers['Authorization'] = authToken;\n\n    return fetch('http://localhost:3001/' + path, options)\n        .then((res) => {\n            if (res.ok) return res.json();\n            throw new Error('There was an error');\n        })\n        .catch((e) => {\n            console.log('3');\n            setToken(null);\n            window.alert(e.message);\n            window.location.href = '/login';\n        });\n};\n"],"mappings":"4VAAA,OAASA,QAAQ,CAAEC,QAAQ,KAAQ,UAAU,CAE7C,MAAO,IAAMC,QAAO,4FAAG,iBAAOC,IAAI,8JAAEC,IAAI,+CAAG,CAAC,CAAC,CACnCC,SAAS,CAAGL,QAAQ,EAAE,CAEtBM,OAAO,CAAG,CACZC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAE,MAAM,CACZC,KAAK,CAAE,UAAU,CACjBC,WAAW,CAAE,aAAa,CAC1BC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,cAAc,CAAE,aAAa,CAC7BC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACX,IAAI,CAC7B,CAAC,CAED,GAAIC,SAAS,CAAEC,OAAO,CAACK,OAAO,CAAC,eAAe,CAAC,CAAGN,SAAS,CAAC,gCAErDW,KAAK,CAAC,wBAAwB,CAAGb,IAAI,CAAEG,OAAO,CAAC,CACjDW,IAAI,CAAC,SAACC,GAAG,CAAK,CACX,GAAIA,GAAG,CAACC,EAAE,CAAE,MAAOD,IAAG,CAACE,IAAI,EAAE,CAC7B,KAAM,IAAIC,MAAK,CAAC,oBAAoB,CAAC,CACzC,CAAC,CAAC,CACDC,KAAK,CAAC,SAACC,CAAC,CAAK,CACVC,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC,CAChBxB,QAAQ,CAAC,IAAI,CAAC,CACdyB,MAAM,CAACC,KAAK,CAACJ,CAAC,CAACK,OAAO,CAAC,CACvBF,MAAM,CAACG,QAAQ,CAACC,IAAI,CAAG,QAAQ,CACnC,CAAC,CAAC,uDACT,kBA1BY5B,QAAO,4CA0BnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}