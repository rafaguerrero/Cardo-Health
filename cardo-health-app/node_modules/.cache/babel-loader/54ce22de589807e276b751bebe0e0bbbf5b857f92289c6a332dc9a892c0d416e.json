{"ast":null,"code":"import { getToken, setToken } from '../token';\nexport const authAPI = async function (path) {\n  let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const authToken = getToken();\n  const options = {\n    method: 'POST',\n    mode: 'cors',\n    cache: 'no-cache',\n    credentials: 'same-origin',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    referrerPolicy: 'no-referrer',\n    body: JSON.stringify(data)\n  };\n  if (authToken) options.headers['Authorization'] = authToken;\n  return fetch('http://localhost:3001/' + path, options).then(res => {\n    if (res.ok) return res.json();\n    throw new Error('There was an error');\n  }).catch(e => {\n    console.log('3');\n    setToken(null);\n    window.alert(e.message);\n    window.location.href = '/login';\n  });\n};","map":{"version":3,"names":["getToken","setToken","authAPI","path","data","authToken","options","method","mode","cache","credentials","headers","referrerPolicy","body","JSON","stringify","fetch","then","res","ok","json","Error","catch","e","console","log","window","alert","message","location","href"],"sources":["/Users/rafaelguerreroclemente/Documents/interviews/Cardo-Health/cardo-health-app/src/utils/api/index.js"],"sourcesContent":["import { getToken, setToken } from '../token';\n\nexport const authAPI = async (path, data = {}) => {\n    const authToken = getToken();\n\n    const options = {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: { 'Content-Type': 'application/json' },\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify(data)\n    };\n\n    if (authToken) options.headers['Authorization'] = authToken;\n\n    return fetch('http://localhost:3001/' + path, options)\n        .then((res) => {\n            if (res.ok) return res.json();\n            throw new Error('There was an error');\n        })\n        .catch((e) => {\n            console.log('3');\n            setToken(null);\n            window.alert(e.message);\n            window.location.href = '/login';\n        });\n};\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,QAAQ,QAAQ,UAAU;AAE7C,OAAO,MAAMC,OAAO,GAAG,gBAAOC,IAAI,EAAgB;EAAA,IAAdC,IAAI,uEAAG,CAAC,CAAC;EACzC,MAAMC,SAAS,GAAGL,QAAQ,EAAE;EAE5B,MAAMM,OAAO,GAAG;IACZC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE,UAAU;IACjBC,WAAW,EAAE,aAAa;IAC1BC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,cAAc,EAAE,aAAa;IAC7BC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,IAAI;EAC7B,CAAC;EAED,IAAIC,SAAS,EAAEC,OAAO,CAACK,OAAO,CAAC,eAAe,CAAC,GAAGN,SAAS;EAE3D,OAAOW,KAAK,CAAC,wBAAwB,GAAGb,IAAI,EAAEG,OAAO,CAAC,CACjDW,IAAI,CAAEC,GAAG,IAAK;IACX,IAAIA,GAAG,CAACC,EAAE,EAAE,OAAOD,GAAG,CAACE,IAAI,EAAE;IAC7B,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;EACzC,CAAC,CAAC,CACDC,KAAK,CAAEC,CAAC,IAAK;IACVC,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;IAChBxB,QAAQ,CAAC,IAAI,CAAC;IACdyB,MAAM,CAACC,KAAK,CAACJ,CAAC,CAACK,OAAO,CAAC;IACvBF,MAAM,CAACG,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACnC,CAAC,CAAC;AACV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}