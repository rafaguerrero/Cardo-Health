{"ast":null,"code":"import axios from 'axios';\nimport { getToken } from './token';\nexport const authAPI = async function (path) {\n  let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let credentials = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  const authToken = getToken();\n  const aixosOptions = {\n    method: 'POST',\n    url: 'http://localhost:3001/' + path,\n    headers: {},\n    withCredentials: credentials,\n    data: data\n  };\n  const options = {\n    method: 'POST',\n    mode: 'cors',\n    cache: 'no-cache',\n    credentials: 'same-origin',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    referrerPolicy: 'no-referrer',\n    body: JSON.stringify(data)\n  };\n  console.log(options);\n  if (authToken) options.headers['Authorization'] = authToken;\n  return (await fetch('http://localhost:3001/' + path, options)).json();\n};","map":{"version":3,"names":["axios","getToken","authAPI","path","data","credentials","authToken","aixosOptions","method","url","headers","withCredentials","options","mode","cache","referrerPolicy","body","JSON","stringify","console","log","fetch","json"],"sources":["/Users/rafaelguerreroclemente/Documents/interviews/cardo-health/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\nimport { getToken } from './token';\n\nexport const authAPI = async (path, data = {}, credentials = true) => {\n    const authToken = getToken();\n\n    const aixosOptions = {\n        method: 'POST',\n        url: 'http://localhost:3001/' + path,\n        headers: {},\n        withCredentials: credentials,\n        data: data\n    };\n\n    const options = {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: { 'Content-Type': 'application/json' },\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify(data)\n    };\n\n    console.log(options)\n\n    if(authToken) options.headers['Authorization'] = authToken;\n\n    return (await fetch('http://localhost:3001/' + path, options)).json();\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,SAAS;AAElC,OAAO,MAAMC,OAAO,GAAG,gBAAOC,IAAI,EAAoC;EAAA,IAAlCC,IAAI,uEAAG,CAAC,CAAC;EAAA,IAAEC,WAAW,uEAAG,IAAI;EAC7D,MAAMC,SAAS,GAAGL,QAAQ,EAAE;EAE5B,MAAMM,YAAY,GAAG;IACjBC,MAAM,EAAE,MAAM;IACdC,GAAG,EAAE,wBAAwB,GAAGN,IAAI;IACpCO,OAAO,EAAE,CAAC,CAAC;IACXC,eAAe,EAAEN,WAAW;IAC5BD,IAAI,EAAEA;EACV,CAAC;EAED,MAAMQ,OAAO,GAAG;IACZJ,MAAM,EAAE,MAAM;IACdK,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE,UAAU;IACjBT,WAAW,EAAE,aAAa;IAC1BK,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CK,cAAc,EAAE,aAAa;IAC7BC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACd,IAAI;EAC7B,CAAC;EAEDe,OAAO,CAACC,GAAG,CAACR,OAAO,CAAC;EAEpB,IAAGN,SAAS,EAAEM,OAAO,CAACF,OAAO,CAAC,eAAe,CAAC,GAAGJ,SAAS;EAE1D,OAAO,CAAC,MAAMe,KAAK,CAAC,wBAAwB,GAAGlB,IAAI,EAAES,OAAO,CAAC,EAAEU,IAAI,EAAE;AACzE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}