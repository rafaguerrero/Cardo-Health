{"ast":null,"code":"var _jsxFileName = \"/Users/rafaelguerreroclemente/Documents/interviews/cardo-health/src/components/Book/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TextInput from '../TextInput';\nimport './styles.scss';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst onSaveHandler = () => {\n  console.log(\"----------\");\n  console.log(\"Click Handler\");\n  console.log(\"----------\");\n};\nconst updateValue = (book, key, value) => {\n  return Object.assign({}, book, {\n    [key]: value\n  });\n};\nconst renderEditBook = (book, update, setUpdate) => {\n  const updatedBook = Object.assign({}, book, update);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TextInput, {\n      text: book.title,\n      onChange: value => setUpdate(updateValue(book, 'title', value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      text: book.isbn,\n      onChange: value => setUpdate(updateValue(book, 'isbn', value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      text: book.author,\n      onChange: value => setUpdate(updateValue(book, 'author', value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\nconst renderBook = book => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: book.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: book.isbn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: book.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\nfunction Book(_ref) {\n  _s();\n  let {\n    book\n  } = _ref;\n  const [update, setUpdate] = useState({});\n  const [isEdit, setIsEdit] = useState(!book.isbn);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comp-book\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comp-book-wrapper\",\n      children: isEdit ? renderEditBook(book, update, setUpdate) : renderBook(book)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), isEdit && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"comp-book-btn comp-book-save\",\n      onClick: onSaveHandler,\n      disabled: Object.keys(update).length > 0 || !update.isbn,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"comp-book-btn comp-book-edit\",\n      onClick: () => {\n        setIsEdit(!isEdit);\n        setUpdate({});\n      },\n      children: isEdit ? 'Cancel' : 'Edit'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n}\n_s(Book, \"usg534OomXiG996967SPILPHDuo=\");\n_c = Book;\nexport default Book;\nvar _c;\n$RefreshReg$(_c, \"Book\");","map":{"version":3,"names":["React","useState","useEffect","TextInput","onSaveHandler","console","log","updateValue","book","key","value","Object","assign","renderEditBook","update","setUpdate","updatedBook","title","isbn","author","renderBook","Book","isEdit","setIsEdit","keys","length"],"sources":["/Users/rafaelguerreroclemente/Documents/interviews/cardo-health/src/components/Book/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TextInput from '../TextInput';\nimport './styles.scss';\n\nconst onSaveHandler = () => {\n  console.log(\"----------\");\n  console.log(\"Click Handler\");\n  console.log(\"----------\");\n}\n\nconst updateValue = (book, key, value) => {\n  return Object.assign({}, book, { [key]: value })\n}\n\nconst renderEditBook = (book, update, setUpdate) => {\n  const updatedBook = Object.assign({}, book, update);\n\n  return <>\n    <TextInput text={ book.title } onChange={(value) => setUpdate(updateValue(book, 'title', value))}/>\n    <TextInput text={ book.isbn } onChange={(value) => setUpdate(updateValue(book, 'isbn', value))}/>\n    <TextInput text={ book.author } onChange={(value) => setUpdate(updateValue(book, 'author', value))}/>\n  </>\n}\n\nconst renderBook = (book) => {\n  return <>\n    <h2>{ book.title }</h2>\n    <p>{ book.isbn }</p>\n    <p>{ book.author }</p>\n  </>\n}\n\nfunction Book({ book }) {\n  const [update, setUpdate] = useState({});\n  const [isEdit, setIsEdit] = useState(!book.isbn);\n\n  return <div className='comp-book'>\n    <div className='comp-book-wrapper'>\n      { isEdit ? renderEditBook(book, update, setUpdate) : renderBook(book) }\n    </div>\n\n    {\n      isEdit && <button className=\"comp-book-btn comp-book-save\"\n                        onClick={onSaveHandler}\n                        disabled={Object.keys(update).length > 0 || !update.isbn}>\n        Save\n      </button>\n    }\n\n    <button className=\"comp-book-btn comp-book-edit\"\n            onClick={() => {\n              setIsEdit(!isEdit);\n              setUpdate({});\n            }}>\n      { isEdit ? 'Cancel' : 'Edit' }\n    </button>\n  </div>;\n}\n\nexport default Book;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,cAAc;AACpC,OAAO,eAAe;AAAC;AAAA;AAEvB,MAAMC,aAAa,GAAG,MAAM;EAC1BC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EACzBD,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAC5BD,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;AAC3B,CAAC;AAED,MAAMC,WAAW,GAAG,CAACC,IAAI,EAAEC,GAAG,EAAEC,KAAK,KAAK;EACxC,OAAOC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEJ,IAAI,EAAE;IAAE,CAACC,GAAG,GAAGC;EAAM,CAAC,CAAC;AAClD,CAAC;AAED,MAAMG,cAAc,GAAG,CAACL,IAAI,EAAEM,MAAM,EAAEC,SAAS,KAAK;EAClD,MAAMC,WAAW,GAAGL,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEJ,IAAI,EAAEM,MAAM,CAAC;EAEnD,oBAAO;IAAA,wBACL,QAAC,SAAS;MAAC,IAAI,EAAGN,IAAI,CAACS,KAAO;MAAC,QAAQ,EAAGP,KAAK,IAAKK,SAAS,CAACR,WAAW,CAACC,IAAI,EAAE,OAAO,EAAEE,KAAK,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAE,eACnG,QAAC,SAAS;MAAC,IAAI,EAAGF,IAAI,CAACU,IAAM;MAAC,QAAQ,EAAGR,KAAK,IAAKK,SAAS,CAACR,WAAW,CAACC,IAAI,EAAE,MAAM,EAAEE,KAAK,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAE,eACjG,QAAC,SAAS;MAAC,IAAI,EAAGF,IAAI,CAACW,MAAQ;MAAC,QAAQ,EAAGT,KAAK,IAAKK,SAAS,CAACR,WAAW,CAACC,IAAI,EAAE,QAAQ,EAAEE,KAAK,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA,gBACpG;AACL,CAAC;AAED,MAAMU,UAAU,GAAIZ,IAAI,IAAK;EAC3B,oBAAO;IAAA,wBACL;MAAA,UAAMA,IAAI,CAACS;IAAK;MAAA;MAAA;MAAA;IAAA,QAAO,eACvB;MAAA,UAAKT,IAAI,CAACU;IAAI;MAAA;MAAA;MAAA;IAAA,QAAM,eACpB;MAAA,UAAKV,IAAI,CAACW;IAAM;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA,gBACrB;AACL,CAAC;AAED,SAASE,IAAI,OAAW;EAAA;EAAA,IAAV;IAAEb;EAAK,CAAC;EACpB,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACqB,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC,CAACO,IAAI,CAACU,IAAI,CAAC;EAEhD,oBAAO;IAAK,SAAS,EAAC,WAAW;IAAA,wBAC/B;MAAK,SAAS,EAAC,mBAAmB;MAAA,UAC9BI,MAAM,GAAGT,cAAc,CAACL,IAAI,EAAEM,MAAM,EAAEC,SAAS,CAAC,GAAGK,UAAU,CAACZ,IAAI;IAAC;MAAA;MAAA;MAAA;IAAA,QACjE,EAGJc,MAAM,iBAAI;MAAQ,SAAS,EAAC,8BAA8B;MACxC,OAAO,EAAElB,aAAc;MACvB,QAAQ,EAAEO,MAAM,CAACa,IAAI,CAACV,MAAM,CAAC,CAACW,MAAM,GAAG,CAAC,IAAI,CAACX,MAAM,CAACI,IAAK;MAAA,UAAC;IAE5E;MAAA;MAAA;MAAA;IAAA,QAAS,eAGX;MAAQ,SAAS,EAAC,8BAA8B;MACxC,OAAO,EAAE,MAAM;QACbK,SAAS,CAAC,CAACD,MAAM,CAAC;QAClBP,SAAS,CAAC,CAAC,CAAC,CAAC;MACf,CAAE;MAAA,UACNO,MAAM,GAAG,QAAQ,GAAG;IAAM;MAAA;MAAA;MAAA;IAAA,QACrB;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AACR;AAAC,GAzBQD,IAAI;AAAA,KAAJA,IAAI;AA2Bb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}