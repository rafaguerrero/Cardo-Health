{"ast":null,"code":"import { getToken, setToken } from './token';\nexport const authAPI = async function (path) {\n  let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let credentials = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  const authToken = getToken();\n  const options = {\n    method: 'POST',\n    mode: 'cors',\n    cache: 'no-cache',\n    credentials: 'same-origin',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    referrerPolicy: 'no-referrer',\n    body: JSON.stringify(data)\n  };\n  if (authToken) options.headers['Authorization'] = authToken;\n  return fetch('http://localhost:3001/' + path, options).then(res => {\n    if (res.ok) return res.json();\n    throw new Error('There was an error');\n  }).catch(e => {\n    setToken(null);\n    window.alert(e.message);\n    window.location.href = '/login';\n  });\n};","map":{"version":3,"names":["getToken","setToken","authAPI","path","data","credentials","authToken","options","method","mode","cache","headers","referrerPolicy","body","JSON","stringify","fetch","then","res","ok","json","Error","catch","e","window","alert","message","location","href"],"sources":["/Users/rafaelguerreroclemente/Documents/interviews/cardo-health/src/utils/api.js"],"sourcesContent":["import { getToken, setToken } from './token';\n\nexport const authAPI = async (path, data = {}, credentials = true) => {\n    const authToken = getToken();\n\n    const options = {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: { 'Content-Type': 'application/json' },\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify(data)\n    };\n\n    if(authToken) options.headers['Authorization'] = authToken;\n\n    return fetch('http://localhost:3001/' + path, options)\n                .then(res => {\n                    if(res.ok) return res.json();\n                    throw new Error('There was an error');\n                })\n                .catch(e => {\n                    setToken(null);\n                    window.alert(e.message);\n                    window.location.href = '/login';\n                });\n};"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,QAAQ,QAAQ,SAAS;AAE5C,OAAO,MAAMC,OAAO,GAAG,gBAAOC,IAAI,EAAoC;EAAA,IAAlCC,IAAI,uEAAG,CAAC,CAAC;EAAA,IAAEC,WAAW,uEAAG,IAAI;EAC7D,MAAMC,SAAS,GAAGN,QAAQ,EAAE;EAE5B,MAAMO,OAAO,GAAG;IACZC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE,UAAU;IACjBL,WAAW,EAAE,aAAa;IAC1BM,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,cAAc,EAAE,aAAa;IAC7BC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,IAAI;EAC7B,CAAC;EAED,IAAGE,SAAS,EAAEC,OAAO,CAACI,OAAO,CAAC,eAAe,CAAC,GAAGL,SAAS;EAE1D,OAAOU,KAAK,CAAC,wBAAwB,GAAGb,IAAI,EAAEI,OAAO,CAAC,CACzCU,IAAI,CAACC,GAAG,IAAI;IACT,IAAGA,GAAG,CAACC,EAAE,EAAE,OAAOD,GAAG,CAACE,IAAI,EAAE;IAC5B,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;EACzC,CAAC,CAAC,CACDC,KAAK,CAACC,CAAC,IAAI;IACRtB,QAAQ,CAAC,IAAI,CAAC;IACduB,MAAM,CAACC,KAAK,CAACF,CAAC,CAACG,OAAO,CAAC;IACvBF,MAAM,CAACG,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACnC,CAAC,CAAC;AAClB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}